- name: Check Windows Version
  win_shell: |
    $os_version = (Get-WmiObject -Class Win32_OperatingSystem).Version
    $major_version = [int]$os_version.Split(".")[0]
    Write-Output $major_version
  register: windows_version

- name: Remove leading and trailing spaces from Windows version
  set_fact:
    trimmed_windows_version: "{{ windows_version.stdout | trim }}"

- name: Display Windows Version
  debug:
    msg: "Windows Version: {{ trimmed_windows_version }}"
    
- name: Check if Windows version is supported
  fail:
    msg: "Unsupported Windows version. This playbook only supports Windows 10 and Windows 11."
  when: windows_version.stdout.find('10') != -1

- name: Update Windows 10 and 11
  block:
    - name: Check if the correct Windows version
      when: windows_version.stdout.find('10') != -1
      win_updates:
        category_names: "CriticalUpdates,SecurityUpdates,UpdateRollups"
        state: installed
      register: update_result
      ignore_errors: yes

    - name: Fail the playbook if the update failed for Windows
      fail:
        msg: "Update failed on Windows 11"
      when: update_result is failed

- name: Install all critical and security updates
  win_updates:
    category_names:
    - CriticalUpdates
    - SecurityUpdates
    state: installed
  register: update_result

- name: Reboot host if required
  win_reboot:
  when: update_result.reboot_required