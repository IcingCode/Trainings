- name: Set mydistribution variable based on distribution
  ansible.builtin.set_fact:
    mydistribution: "{{ 'centos' if ansible_distribution == 'Rocky' else ansible_distribution_lower }}"

- name: Add Docker signing key for RedHat-based systems
  ansible.builtin.rpm_key:
    key: "{{ docker_gpg_key_url }}"
    state: present
  when: is_redhat

- name: Add Docker repository to yum.repos.d
  ansible.builtin.yum_repository:
    name: docker
    description: Docker Repository
    baseurl: "{{ docker_base_url }}"
    enabled: true
    gpgcheck: true
    gpgkey: "{{ docker_gpg_key_url }}"
  when: is_redhat

- name: Install prerequisites for Docker on Debian-based systems
  ansible.builtin.apt:
    pkg:
      - ca-certificates
      - curl
      - gnupg2
      - lsb-release
    state: present
    update_cache: yes
  when: is_debian

- name: Add Docker APT key for Debian-based systems
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present
  when: is_debian

- name: Add Docker APT repository for Debian-based systems
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution_lower }} {{ ansible_distribution_release }} stable"
    state: present
    update_cache: yes
  when: is_debian

- name: Install Docker and dependencies
  ansible.builtin.package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: present

- name: Start and enable Docker service
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes

- name: Start and enable containerd service
  ansible.builtin.service:
    name: containerd
    state: started
    enabled: yes

- name: Add user vagrant to docker group
  ansible.builtin.user:
    name: vagrant
    groups: docker
    append: yes

- name: Deploy Nginx Docker container
  community.docker.docker_container:
    image: nginx:stable
    name: nginx
    state: started
    auto_remove: yes
    ports:
      - "8080:80"

- name: Create Portainer data directory
  ansible.builtin.file:
    path: "{{ portainer_data_directory }}"
    state: directory
    owner: vagrant
    group: vagrant

- name: Deploy Portainer container
  community.docker.docker_container:
    name: portainer
    image: portainer/portainer-ce:latest
    restart_policy: unless-stopped
    security_opts:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ portainer_data_directory }}:/data"
    ports:
      - "9000:9000"
