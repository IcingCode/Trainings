- name: set mydistribution
  ansible.builtin.set_fact:
    mydistribution: "{{ 'centos' if (ansible_distribution == 'Rocky') else (ansible_distribution | lower) }}"
  
- name: Add signing key
  ansible.builtin.rpm_key:
    key: "https://download.docker.com/linux/{{ mydistribution }}/gpg"
    state: present
  when: ansible_os_family == "RedHat"

- name: Add repository into repo.d list
  ansible.builtin.yum_repository:
    name: docker
    description: docker repository
    baseurl: "https://download.docker.com/linux/{{ mydistribution }}/$releasever/$basearch/stable"
    enabled: true
    gpgcheck: true
    gpgkey: "https://download.docker.com/linux/{{ mydistribution }}/gpg"
  when: ansible_os_family == "RedHat"

- name: install prerequisites for Docker repository
  ansible.builtin.apt:
    pkg:
      - ca-certificates
      - curl
      - gnupg2
      - lsb-release
  when: ansible_os_family == "Debian"

- name: add docker apt key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_os_family == "Debian"

- name: add docker apt repo
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: install docker and its dependencies
  ansible.builtin.package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: present

- name: start and enable Docker
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes

- name: start and enable containerd daemon
  ansible.builtin.service:
    name: containerd
    state: started
    enabled: yes

- name: adding user vagrant to docker group
  ansible.builtin.user:
    name: vagrant
    groups: docker
    append: true

- name: deploy nginx docker container
  docker_container:
    image: nginx:stable
    name: nginx
    state: started
    auto_remove: true
    ports:
      - "8080:80"

# Deploy Portainer
- name: Create Portainer data directory
  file:
    path: /home/vagrant/docker/portainer/portainer-data
    state: directory
    owner: vagrant
    group: vagrant

- name: Deploy Portainer container
  docker_container:
    name: portainer
    image: portainer/portainer-ce:latest
    restart_policy: unless-stopped
    security_opts:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/vagrant/docker/portainer/portainer-data:/data
    ports:
      - 9000:9000