---

- name: Install MariaDB server and Python MySQL client
  ansible.builtin.dnf:
    name:
      - mariadb-server
      - python3-PyMySQL
    state: present
  tags: ['install', 'mariadb']

- name: Start and enable MariaDB service
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: true
  tags: ['service', 'mariadb']

- name: Check if root password is set
  ansible.builtin.command: mysqladmin -u root status
  register: mysql_root_check
  changed_when: false
  failed_when: false
  check_mode: false
  tags: ['mysql', 'root_password']

- name: Set MariaDB root password for the first time
  become: true
  community.mysql.mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock  # Verify the correct socket path
    check_implicit_admin: yes
  when: mysql_root_check.rc != 0
  tags: ['mysql', 'root_password']

- name: Update MariaDB root password for localhost
  become: true
  community.mysql.mysql_user:
    name: root
    host: localhost
    password: "{{ mysql_root_password }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    check_implicit_admin: yes
    state: present
  when: mysql_root_check.rc == 0
  tags: ['mysql', 'root_password']

- name: Create 'accounts' database
  community.mysql.mysql_db:
    name: accounts
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  tags: ['mysql', 'database']

- name: Create 'admin' user
  community.mysql.mysql_user:
    name: admin
    password: "{{ mysql_user_password }}"
    priv: 'accounts.*:ALL'
    host: '%'
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  tags: ['mysql', 'user']

- name: Copy database dump file
  ansible.builtin.copy:
    src: db_backup.sql
    dest: /tmp/db_backup.sql
  tags: ['mysql', 'database']

- name: Check if database is already populated
  community.mysql.mysql_query:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    database: accounts
    query: "SELECT COUNT(*) AS count FROM information_schema.tables WHERE table_schema = 'accounts';"
  register: db_check
  tags: ['mysql', 'database']

- name: Restore database
  community.mysql.mysql_db:
    name: accounts
    state: import
    target: /tmp/db_backup.sql
    login_user: root
    login_password: "{{ mysql_root_password }}"
  when: db_check.query_result[0]['count'] == 0
  tags: ['mysql', 'database']

- name: Configure firewall for MySQL
  ansible.posix.firewalld:
    port: 3306/tcp
    permanent: true
    state: enabled
  notify: Reload firewall
  tags: ['firewall', 'mysql']
