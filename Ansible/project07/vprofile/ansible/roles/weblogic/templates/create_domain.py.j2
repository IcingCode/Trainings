#!/usr/bin/env python
# -*- coding: utf-8 -*-

# WebLogic Domain Creation Script
# Generated by Ansible

import java.util.Properties as Properties
import java.io.FileInputStream as FileInputStream

try:
    print 'Starting WebLogic domain creation...'
    
    # Domain configuration variables
    domain_name = """{{ weblogic_domain_name }}"""
    domain_path = """{{ domain_home }}"""
    admin_listen_port = {{ weblogic_admin_port }}
    admin_ssl_port = {{ weblogic_admin_ssl_port }}
    admin_username = """{{ weblogic_admin_username }}"""
    admin_password = """{{ weblogic_admin_password }}"""
    java_home_path = """{{ java_home }}"""
    domain_mode = """dev"""
    ssl_enabled = {{ weblogic_enable_ssl | lower }}
    min_memory = """{{ weblogic_memory_min }}"""
    max_memory = """{{ weblogic_memory_max }}"""
    
    print 'Domain Name: ' + domain_name
    print 'Domain Path: ' + domain_path
    print 'Admin Port: ' + str(admin_listen_port)
    print 'SSL Enabled: ' + str(ssl_enabled)
    
    # Read the domain template
    print 'Reading WebLogic domain template...'
    readTemplate("""{{ oracle_home }}/wlserver/common/templates/wls/wls.jar""")
    
    # Configure the Administration Server
    print 'Configuring Administration Server...'
    cd('/Servers/AdminServer')
    set('ListenAddress', '')
    set('ListenPort', admin_listen_port)
    set('Name', 'AdminServer')
    
    # Configure SSL if enabled
    if ssl_enabled:
        print 'Configuring SSL...'
        create('AdminServer', 'SSL')
        cd('/Servers/AdminServer/SSL/AdminServer')
        set('Enabled', 'True')
        set('ListenPort', admin_ssl_port)
    
    # Define the user password for weblogic
    print 'Setting admin credentials...'
    cd('/Security/base_domain/User/' + admin_username)
    cmo.setPassword(admin_password)
    
    # Configure Node Manager
    print 'Configuring Node Manager...'
    cd('/NMProperties')
    set('ListenAddress', '')
    set('ListenPort', 5556)
    set('CrashRecoveryEnabled', 'true')
    set('NativeVersionEnabled', 'true')
    set('StartScriptEnabled', 'false')
    set('SecureListener', 'false')
    set('LogLevel', 'INFO')
    
    # Set domain options
    print 'Setting domain options...'
    setOption('DomainName', domain_name)
    setOption('JavaHome', java_home_path)
    setOption('ServerStartMode', domain_mode)
    
    # Configure JVM arguments
    print 'Configuring JVM arguments...'
    cd('/Servers/AdminServer')
    create('AdminServer','ServerStart')
    cd('/Servers/AdminServer/ServerStart/AdminServer')
    jvm_args = '-Xms' + min_memory + ' -Xmx' + max_memory + ' -XX:+UseG1GC -Dfile.encoding=UTF-8'
    set('Arguments', jvm_args)
    
    # Write the domain and close the domain template
    print 'Writing domain to: ' + domain_path
    writeDomain(domain_path)
    closeTemplate()
    
    print 'Domain creation completed successfully!'
    print 'Domain location: ' + domain_path
    
except Exception, e:
    print 'Error creating domain: ' + str(e)
    dumpStack()
    exit(exitcode=1)

exit()
