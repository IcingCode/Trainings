#!/bin/bash
set -euo pipefail

##############################################################################
# WebLogic 14c SystemD-Compatible Daemon Startup Script
# Generated by Ansible
##############################################################################

# Logging function
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') [WEBLOGIC-SYSTEMD] $1" >&2
    logger -t weblogic-{{ weblogic_domain_name }} "$1"
}

log_message "SystemD daemon startup initiated"

# Environment setup
export ORACLE_BASE="{{ oracle_base }}"
export ORACLE_HOME="{{ oracle_home }}"
export MW_HOME="{{ middleware_home }}"
export WLS_HOME="{{ wls_home }}"
export WL_HOME="{{ wl_home }}"
export JAVA_HOME="{{ java_home }}"
export DOMAIN_HOME="{{ domain_home }}"

# Validate environment
if [ ! -f "{{ java_home }}/bin/java" ]; then
    log_message "ERROR: Java executable not found"
    exit 1
fi

if [ ! -d "{{ domain_home }}" ]; then
    log_message "ERROR: Domain home not found"
    exit 1
fi

# Change to domain directory
cd "{{ domain_home }}" || exit 1
log_message "Working directory: $(pwd)"

# Clean up any existing PID files
rm -f {{ domain_home }}/AdminServer.pid

# Create logs directory
mkdir -p logs

# JVM Configuration
JAVA_OPTS="-server"
JAVA_OPTS="${JAVA_OPTS} -Xms{{ weblogic_min_heap | default('1024m') }}"
JAVA_OPTS="${JAVA_OPTS} -Xmx{{ weblogic_max_heap | default('2048m') }}"
JAVA_OPTS="${JAVA_OPTS} -XX:+UseG1GC"
JAVA_OPTS="${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom"
JAVA_OPTS="${JAVA_OPTS} -Dweblogic.Name=AdminServer"
JAVA_OPTS="${JAVA_OPTS} -Dweblogic.Domain={{ weblogic_domain_name }}"
JAVA_OPTS="${JAVA_OPTS} -Dweblogic.RootDirectory={{ domain_home }}"
JAVA_OPTS="${JAVA_OPTS} -Dweblogic.management.discover=true"
JAVA_OPTS="${JAVA_OPTS} -Dweblogic.ProductionModeEnabled=false"
JAVA_OPTS="${JAVA_OPTS} -Djava.awt.headless=true"
JAVA_OPTS="${JAVA_OPTS} -Dfile.encoding=UTF-8"

# Build classpath
CLASSPATH="{{ wls_home }}/server/lib/weblogic.jar:{{ domain_home }}:{{ domain_home }}/lib/*"

##############################################################################
# SystemD-Compatible Process Management
##############################################################################

log_message "Starting WebLogic AdminServer for SystemD"

# Start WebLogic in background with output redirection
nohup "{{ java_home }}/bin/java" ${JAVA_OPTS} -cp "${CLASSPATH}" weblogic.Server \
    > logs/AdminServer.out 2> logs/AdminServer.err &

WEBLOGIC_PID=$!

# Write PID file for systemd
echo ${WEBLOGIC_PID} > {{ domain_home }}/AdminServer.pid
log_message "WebLogic started with PID: ${WEBLOGIC_PID}"

# Verify process is running
sleep 3
if ! kill -0 ${WEBLOGIC_PID} 2>/dev/null; then
    log_message "ERROR: WebLogic process failed to start"
    rm -f {{ domain_home }}/AdminServer.pid
    exit 1
fi

log_message "WebLogic process confirmed running with PID: ${WEBLOGIC_PID}"
log_message "SystemD startup script completed successfully"

# Important: Exit success for systemd Type=forking
exit 0
