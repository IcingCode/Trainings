---
- name: Add EPEL repository
  ansible.builtin.dnf:
    name: epel-release
    state: present
  tags:
    - setup
    - epel

- name: Install basic packages
  ansible.builtin.package:
    name: "{{ basic_packages }}"
    state: present
  tags:
    - setup
    - packages

- name: Add tomcat group
  ansible.builtin.group:
    name: "{{ tomcat_group }}"
    state: present
  tags:
    - setup
    - users

- name: Add tomcat user
  ansible.builtin.user:
    name: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    groups: "{{ tomcat_additional_groups | default(['systemd-journal']) }}"
    append: true
    home: "{{ tomcat_home }}"
    create_home: true
    system: true
  tags:
    - setup
    - users

- name: Check if Tomcat is installed
  ansible.builtin.stat:
    path: "{{ TOMCAT_BASE }}/tomcat"
  register: tomcat_installed
  tags:
    - setup
    - tomcat

- name: Check current Tomcat version
  ansible.builtin.command: "{{ TOMCAT_BASE }}/tomcat/bin/version.sh"
  register: tomcat_version_output
  changed_when: false
  when: tomcat_installed.stat.exists
  tags:
    - version
    - upgrade

- name: Extract current Tomcat version
  ansible.builtin.set_fact:
    tomcat_current_version: "{{ tomcat_version_output.stdout | regex_search('Server version: Apache Tomcat/([\\d.]+)', '\\1') | first }}"
  when: tomcat_installed.stat.exists
  tags:
    - version
    - upgrade

- name: Compare Tomcat versions
  ansible.builtin.set_fact:
    upgrade_required: "{{ tomcat_current_version is version(tomcat_ver, '<') }}"
  when: tomcat_installed.stat.exists
  tags:
    - version
    - upgrade

- name: Prompt for Tomcat upgrade
  ansible.builtin.pause:
    prompt: "Current Tomcat version is older than {{ tomcat_ver }}. Do you want to proceed with the upgrade? (yes/no)"
  register: upgrade_prompt
  when: tomcat_installed.stat.exists and upgrade_required | default(false)
  tags:
    - version
    - upgrade

- name: Run Tomcat installation tasks
  ansible.builtin.include_tasks: install_tomcat.yml
  when: not tomcat_installed.stat.exists
  tags:
    - setup
    - tomcat

- name: Run Tomcat upgrade tasks
  ansible.builtin.include_tasks: upgrade_tomcat.yml
  when: 
    - tomcat_installed.stat.exists
    - upgrade_required | default(false)
    - upgrade_prompt.user_input | default('no') | lower == 'yes'
  tags:
    - upgrade

- name: Copy tomcat bashrc file
  ansible.builtin.template:
    src: templates/tomcat.bashrc.j2
    dest: "/home/{{ tomcat_user }}/.bashrc"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_user }}"
    mode: '0644'
  tags:
    - config
    - bashrc
    - tomcat
    
- name: Copy tomcat service file
  ansible.builtin.template:
    src: templates/tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
    mode: '0644'
  when: ansible_service_mgr == "systemd"
  tags:
    - config
    - service

- name: Copy setenv file
  ansible.builtin.template:
    src: templates/setenv.sh.j2
    dest: "{{ TOMCAT_BASE }}/tomcat/bin/setenv.sh"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_user }}"
    mode: '0750'
  tags:
    - config

- name: Add sudoers file for tomcat
  ansible.builtin.copy:
    src: files/tomcat
    dest: /etc/sudoers.d/tomcat
    owner: root
    group: root
    mode: "0440"
    validate: /usr/sbin/visudo -csf %s
  tags:
    - config
    - security

- name: Start and enable tomcat
  ansible.builtin.systemd:
    name: tomcat
    state: started
    enabled: true
    daemon_reload: true
  when: ansible_service_mgr == "systemd"
  tags:
    - service

- name: Start and enable firewalld
  ansible.builtin.systemd:
    name: firewalld
    state: started
    enabled: true
  when: ansible_service_mgr == "systemd"
  tags:
    - service
    - firewall

- name: Open tomcat ports on the firewall
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: true
  loop:
    - 80/tcp
    - 443/tcp
    - 8080/tcp
    - 8443/tcp
  when: ansible_service_mgr == "systemd"
  tags:
    - firewall

- name: Set UI access credentials
  ansible.builtin.template:
    src: tomcat-users.xml.j2
    dest: "{{ CATALINA_BASE }}/conf/tomcat-users.xml"
    mode: '0640'
  notify: Restart tomcat
  tags:
    - config
    - security

- name: Allow access to Manager and Host Manager apps from any IP
  ansible.builtin.template:
    src: context.xml.j2
    dest: "{{ item }}"
    mode: '0640'
  loop:
    - "{{ CATALINA_BASE }}/webapps/host-manager/META-INF/context.xml"
    - "{{ CATALINA_BASE }}/webapps/manager/META-INF/context.xml"
    - "{{ CATALINA_BASE }}/webapps/examples/META-INF/context.xml"
  notify: Restart tomcat
  tags:
    - config
    - security

- name: Set unprivileged port start and reload sysctl
  ansible.posix.sysctl:
    name: net.ipv4.ip_unprivileged_port_start
    value: '443'
    sysctl_set: true
    state: present
    reload: true
  tags:
    - config
    - security