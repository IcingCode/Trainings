#!/bin/bash
# ==================================================================================
# Tomcat Management .bashrc Profile
# ==================================================================================
# Generated by Ansible for Apache Tomcat Management
# User: {{ tomcat_user }}
# Tomcat Version: {{ tomcat_ver }}
# Generated on: {{ ansible_date_time.iso8601 }}
# ==================================================================================

# Guard for non-interactive shells
case $- in
  *i*) ;;
    *) return ;;
esac

# ==================================================================================
# COLOR DEFINITIONS
# ==================================================================================
export RESET="\033[0m"
export BOLD="\033[1m"
export DIM="\033[2m"
export UNDERLINE="\033[4m"
export BLINK="\033[5m"
export REVERSE="\033[7m"
export HIDDEN="\033[8m"

# Regular Colors
export BLACK="\033[0;30m"
export RED="\033[0;31m"
export GREEN="\033[0;32m"
export YELLOW="\033[0;33m"
export BLUE="\033[0;34m"
export MAGENTA="\033[0;35m"
export CYAN="\033[0;36m"
export WHITE="\033[0;37m"

# Bold Colors
export BRED="\033[1;31m"
export BGREEN="\033[1;32m"
export BYELLOW="\033[1;33m"
export BBLUE="\033[1;34m"
export BMAGENTA="\033[1;35m"
export BCYAN="\033[1;36m"
export BWHITE="\033[1;37m"

# Background Colors
export BG_BLACK="\033[40m"
export BG_RED="\033[41m"
export BG_GREEN="\033[42m"
export BG_YELLOW="\033[43m"
export BG_BLUE="\033[44m"
export BG_MAGENTA="\033[45m"
export BG_CYAN="\033[46m"
export BG_WHITE="\033[47m"

# ==================================================================================
# TOMCAT ENVIRONMENT VARIABLES (Templated)
# ==================================================================================
# The role defaults should provide these paths. Avoid hardcoding values.
export TARGET_DIR="{{ TARGET_DIR | default('/opt/MW') }}"
export TOMCAT_USER="{{ tomcat_user }}"
export JAVA_BASE="{{ JAVA_BASE | default(TARGET_DIR ~ '/java' if TARGET_DIR is defined else '/opt/MW/java') }}"
export JAVA_HOME="{{ JAVA_HOME | default(JAVA_BASE) }}"
export JAVA="${JAVA_HOME}/bin/java"
export JRE_HOME="${JAVA_HOME}"

# CATALINA paths are aligned to your role's TOMCAT_BASE link
export TOMCAT_BASE="{{ TOMCAT_BASE | default(TARGET_DIR) }}"
export CATALINA_BASE="{{ CATALINA_BASE | default(TOMCAT_BASE ~ '/tomcat') }}"
export CATALINA_HOME="{{ CATALINA_HOME | default(TOMCAT_BASE ~ '/tomcat') }}"

# Common ports (override via vars/defaults)
export TOMCAT_HTTP_PORT="{{ tomcat_http_port | default('8080') }}"
export TOMCAT_HTTPS_PORT="{{ tomcat_https_port | default('8443') }}"

# PATH and CLASSPATH
export PATH="${JAVA_HOME}/bin:${CATALINA_HOME}/bin:${PATH}"

# ==================================================================================
# PROMPT WITH TOMCAT STATUS
# ==================================================================================
tomcat_status_prompt() {
  local status="STOPPED"
  local color="${RED}"
  
  # Check if systemd service is active first
  if command -v systemctl >/dev/null 2>&1 && systemctl is-active --quiet tomcat 2>/dev/null; then
    # Use ss to check if HTTP port is listening
    if ss -tln 2>/dev/null | grep -q ":${TOMCAT_HTTP_PORT} "; then
      status="RUNNING"
      color="${GREEN}"
    else
      # Additional check for any Java process on Tomcat ports
      if ss -tlnp 2>/dev/null | grep -E ":${TOMCAT_HTTP_PORT}.*java" >/dev/null 2>&1; then
        status="RUNNING"
        color="${GREEN}"
      else
        status="STARTING"
        color="${YELLOW}"
      fi
    fi
  fi
  
  echo -e "${color}[TOMCAT:${status}]${RESET}"
}

# Escape command substitution for dynamic prompt
export PS1="\n${BCYAN}╭─${RESET} ${BGREEN}\u${RESET}@${BBLUE}\h${RESET} ${BYELLOW}\w${RESET} \$(tomcat_status_prompt)\n${BCYAN}╰─${RESET} ${BWHITE}\$${RESET} "

# ==================================================================================
# ASCII ART WELCOME MESSAGE
# ==================================================================================
tomcat_welcome() {
  clear
  echo -e "${BCYAN}"
  cat << 'EOF'
╔══════════════════════════════════════════════════════════════════════════════╗
║                          Apache Tomcat Management                           ║
║    ████████╗ ██████╗ ███╗   ███╗ ██████╗  █████╗ ████████╗                  ║
║    ╚══██╔══╝██╔═══██╗████╗ ████║██╔════╝ ██╔══██╗╚══██╔══╝                  ║
║       ██║   ██║   ██║██╔████╔██║██║  ███╗███████║   ██║                     ║
║       ██║   ██║   ██║██║╚██╔╝██║██║   ██║██╔══██║   ██║                     ║
║       ██║   ╚██████╔╝██║ ╚═╝ ██║╚██████╔╝██║  ██║   ██║                     ║
║       ╚═╝    ╚═════╝ ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝                     ║
╚══════════════════════════════════════════════════════════════════════════════╝
EOF
  echo -e "${RESET}"
  echo -e "${BGREEN}🚀 Welcome to Tomcat Management Shell${RESET}"
  echo -e "${CYAN}═══════════════════════════════════════════${RESET}"
  echo -e "${YELLOW}📅 Date: ${RESET}$(date '+%A, %B %d, %Y at %I:%M %p')"
  echo -e "${YELLOW}👤 User: ${RESET}${USER}"
  echo -e "${YELLOW}🖥️  Host: ${RESET}$(hostname)"
  echo -e "${YELLOW}🏠 CATALINA_BASE: ${RESET}${CATALINA_BASE}"
  echo -e "${YELLOW}🏠 CATALINA_HOME: ${RESET}${CATALINA_HOME}"
  echo -e "${YELLOW}🔧 JAVA_HOME: ${RESET}${JAVA_HOME}"
  echo -e "${YELLOW}🌐 HTTP Port: ${RESET}${TOMCAT_HTTP_PORT}"
  echo -e "${YELLOW}🔒 HTTPS Port: ${RESET}${TOMCAT_HTTPS_PORT}"
  echo -e "${CYAN}═══════════════════════════════════════════${RESET}"
  echo -e "${BMAGENTA}💡 Type 't_help' for available commands${RESET}"
  echo ""
}

# ==================================================================================
# TOMCAT MANAGEMENT FUNCTIONS
# ==================================================================================
t_start() {
  echo -e "${BGREEN}🚀 Starting Tomcat...${RESET}"
  if command -v systemctl >/dev/null 2>&1; then
    sudo /bin/systemctl start tomcat.service
  else
    "${CATALINA_HOME}/bin/startup.sh"
  fi
  sleep 2
  t_status
}

t_stop() {
  echo -e "${BRED}🛑 Stopping Tomcat...${RESET}"
  if command -v systemctl >/dev/null 2>&1; then
    sudo /bin/systemctl stop tomcat.service
  else
    "${CATALINA_HOME}/bin/shutdown.sh"
  fi
  # Graceful wait
  sleep 3
  # Force kill lingering java bound to our CATALINA if still alive
  if ss -tlnp 2>/dev/null | grep -qE ":(?:${TOMCAT_HTTP_PORT}|${TOMCAT_HTTPS_PORT}).*java"; then
    pkill -TERM -f "org.apache.catalina.startup.Bootstrap" || true
    sleep 3
    pkill -KILL -f "org.apache.catalina.startup.Bootstrap" 2>/dev/null || true
  fi
  t_status
}

t_restart() {
  echo -e "${BYELLOW}🔄 Restarting Tomcat...${RESET}"
  t_stop
  sleep 5
  t_start
}

t_status() {
  echo -e "${BOLD}📊 Tomcat Status${RESET}"
  echo -e "${CYAN}══════════════════════════════════════${RESET}"
  
  # SystemD Service Status
  if command -v systemctl >/dev/null 2>&1; then
    if systemctl is-active --quiet tomcat 2>/dev/null; then
      echo -e "${GREEN}✅ SystemD Service: ${BOLD}ACTIVE${RESET}"
    else
      echo -e "${YELLOW}ℹ️  SystemD Service: ${BOLD}INACTIVE${RESET}"
    fi
  fi
  
  # Java Process Status
  local jcount
  jcount=$(ps aux | grep -E "org\.apache\.catalina\.startup\.Bootstrap" | grep -v grep | wc -l)
  if [ "${jcount}" -gt 0 ]; then
    echo -e "${GREEN}✅ Java Process: ${BOLD}RUNNING (${jcount})${RESET}"
    echo -e "${DIM}   PID: $(pgrep -f org.apache.catalina.startup.Bootstrap | tr '\n' ' ')${RESET}"
  else
    echo -e "${RED}❌ Java Process: ${BOLD}NOT RUNNING${RESET}"
  fi
  
  # HTTP Port Status using ss
  if ss -tln 2>/dev/null | grep -q ":${TOMCAT_HTTP_PORT} "; then
    echo -e "${GREEN}✅ HTTP Port ${TOMCAT_HTTP_PORT}: ${BOLD}LISTENING${RESET}"
    local ip; ip=$(hostname -I | awk '{print $1}')
    [ -n "$ip" ] && echo -e "${GREEN}🌐 URL: ${BOLD}http://${ip}:${TOMCAT_HTTP_PORT}/${RESET}"
  else
    echo -e "${YELLOW}⚠️  HTTP Port ${TOMCAT_HTTP_PORT}: ${BOLD}NOT LISTENING${RESET}"
  fi
  
  # HTTPS Port Status using ss
  if ss -tln 2>/dev/null | grep -q ":${TOMCAT_HTTPS_PORT} "; then
    echo -e "${GREEN}✅ HTTPS Port ${TOMCAT_HTTPS_PORT}: ${BOLD}LISTENING${RESET}"
    local ip; ip=$(hostname -I | awk '{print $1}')
    [ -n "$ip" ] && echo -e "${GREEN}🔒 URL: ${BOLD}https://${ip}:${TOMCAT_HTTPS_PORT}/${RESET}"
  else
    echo -e "${YELLOW}ℹ️  HTTPS Port ${TOMCAT_HTTPS_PORT}: ${BOLD}NOT LISTENING${RESET}"
  fi
  
  echo -e "${CYAN}══════════════════════════════════════${RESET}"
}

t_logs() {
  echo -e "${BCYAN}📋 Tomcat Logs${RESET}"
  echo -e "${CYAN}═══════════════════${RESET}"
  local log="${CATALINA_BASE}/logs/catalina.out"
  if [ -f "${log}" ]; then
    echo -e "${YELLOW}📄 ${log} (Ctrl+C to exit)${RESET}"
    tail -f "${log}"
  else
    echo -e "${RED}❌ Log file not found: ${log}${RESET}"
  fi
}

t_ports() {
  echo -e "${BCYAN}🔌 Tomcat Network Ports${RESET}"
  echo -e "${CYAN}════════════════════════${RESET}"
  echo -e "${BOLD}Active Tomcat Ports:${RESET}"
  
  # Check for HTTP port
  if ss -tlnp 2>/dev/null | grep ":${TOMCAT_HTTP_PORT} " >/dev/null; then
    local http_info=$(ss -tlnp 2>/dev/null | grep ":${TOMCAT_HTTP_PORT} " | head -1)
    echo -e "${GREEN}  📡 HTTP Port ${TOMCAT_HTTP_PORT}: LISTENING${RESET}"
    echo -e "${DIM}     ${http_info}${RESET}"
  else
    echo -e "${YELLOW}  📡 HTTP Port ${TOMCAT_HTTP_PORT}: NOT LISTENING${RESET}"
  fi
  
  # Check for HTTPS port
  if ss -tlnp 2>/dev/null | grep ":${TOMCAT_HTTPS_PORT} " >/dev/null; then
    local https_info=$(ss -tlnp 2>/dev/null | grep ":${TOMCAT_HTTPS_PORT} " | head -1)
    echo -e "${BLUE}  🔒 HTTPS Port ${TOMCAT_HTTPS_PORT}: LISTENING${RESET}"
    echo -e "${DIM}     ${https_info}${RESET}"
  else
    echo -e "${YELLOW}  🔒 HTTPS Port ${TOMCAT_HTTPS_PORT}: NOT LISTENING${RESET}"
  fi
  
  # Show all Java-related ports
  echo -e "\n${BOLD}All Java Network Connections:${RESET}"
  ss -tlnp 2>/dev/null | grep java | while read line; do
    local port=$(echo "$line" | awk '{print $4}' | awk -F':' '{print $NF}')
    echo -e "${CYAN}  🔌 Port ${port}: ${line}${RESET}"
  done || echo -e "${YELLOW}  No Java network connections found${RESET}"
  
  echo -e "${CYAN}════════════════════════${RESET}"
}

t_config() {
  echo -e "${BCYAN}⚙️  Tomcat Configuration${RESET}"
  echo -e "${CYAN}═══════════════════════════════════${RESET}"
  echo -e "${BOLD}Environment:${RESET}"
  echo -e "${GREEN}  JAVA_HOME: ${RESET}${JAVA_HOME}"
  echo -e "${GREEN}  CATALINA_HOME: ${RESET}${CATALINA_HOME}"
  echo -e "${GREEN}  CATALINA_BASE: ${RESET}${CATALINA_BASE}"
  echo -e "${GREEN}  HTTP Port: ${RESET}${TOMCAT_HTTP_PORT}"
  echo -e "${GREEN}  HTTPS Port: ${RESET}${TOMCAT_HTTPS_PORT}"
  echo -e "\n${BOLD}Java Version:${RESET}"
  java -version 2>&1 | head -1 | sed "s/^/  ${GREEN}/"
  echo -e "${RESET}"
  echo -e "${CYAN}═══════════════════════════════════${RESET}"
}

t_help() {
  echo -e "${BCYAN}📚 Tomcat Management Commands${RESET}"
  echo -e "${CYAN}════════════════════════════════════════════════════════${RESET}"
  echo -e "${BOLD}🚀 SERVICE:${RESET}"
  echo -e "  ${BGREEN}t_start${RESET}      - Start Tomcat"
  echo -e "  ${BRED}t_stop${RESET}       - Stop Tomcat"
  echo -e "  ${BYELLOW}t_restart${RESET}    - Restart Tomcat"
  echo -e "  ${BCYAN}t_status${RESET}     - Show detailed status"
  echo ""
  echo -e "${BOLD}📊 DIAGNOSTICS:${RESET}"
  echo -e "  ${BMAGENTA}t_logs${RESET}       - Tail catalina.out"
  echo -e "  ${BMAGENTA}t_ports${RESET}      - Show active ports"
  echo -e "  ${BBLUE}t_config${RESET}     - Show config summary"
  echo ""
  echo -e "${BOLD}🎨 MISC:${RESET}"
  echo -e "  ${BWHITE}tomcat_welcome${RESET} - Show welcome screen"
  echo -e "  ${BWHITE}t_help${RESET}         - This help"
  echo -e "${CYAN}════════════════════════════════════════════════════════${RESET}"
}

# ==================================================================================
# USEFUL ALIASES
# ==================================================================================
alias ll='ls -alF --color=auto'
alias la='ls -A --color=auto'
alias l='ls -CF --color=auto'
alias ls='ls --color=auto'
alias grep='grep --color=auto' ; alias fgrep='fgrep --color=auto' ; alias egrep='egrep --color=auto'

alias start-tomcat='t_start'
alias stop-tomcat='t_stop'
alias restart-tomcat='t_restart'
alias status-tomcat='t_status'
alias tomcat-logs='t_logs'
alias tomcat-ports='t_ports'
alias tomcat-conf='t_config'

alias tomcat-home='cd ${CATALINA_HOME}'
alias tomcat-base='cd ${CATALINA_BASE}'
alias tomcat-logdir='cd ${CATALINA_BASE}/logs'
alias tomcat-bindir='cd ${CATALINA_HOME}/bin'
alias tomcat-confdir='cd ${CATALINA_BASE}/conf'

# ==================================================================================
# BASH COMPLETION AND HISTORY
# ==================================================================================
[ -f /etc/bash_completion ] && . /etc/bash_completion

export HISTSIZE="{{ bash_hist_size | default(10000) }}"
export HISTFILESIZE="{{ bash_hist_file_size | default(20000) }}"
export HISTCONTROL=ignoredups:ignorespace
shopt -s histappend
shopt -s checkwinsize

# ==================================================================================
# INITIALIZATION
# ==================================================================================
# Show welcome screen on interactive login once per session (can be disabled)
if [[ $- == *i* ]] && [[ $0 == *bash* ]] && [[ "${TOMCAT_WELCOME_SHOWN:-}" != "1" ]] && {{ tomcat_show_welcome | default(true) | bool | lower }}; then
  export TOMCAT_WELCOME_SHOWN=1
  tomcat_welcome
fi

# ==================================================================================
# END OF TOMCAT MANAGEMENT .bashrc
# ==================================================================================
